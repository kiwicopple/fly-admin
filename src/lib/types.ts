/* eslint-disable */
/* tslint:disable */
/*
 * ---------------------------------------------------------------
 * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##
 * ##                                                           ##
 * ## AUTHOR: acacode                                           ##
 * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##
 * ---------------------------------------------------------------
 */

export interface App {
  name?: string
  organization?: Organization
  status?: string
}

export interface CheckStatus {
  name?: string
  output?: string
  status?: string
  updated_at?: string
}

export interface CreateAppRequest {
  app_name?: string
  network?: string
  org_slug?: string
}

export interface CreateLeaseRequest {
  description?: string
  ttl?: number
}

export interface CreateMachineRequest {
  config?: ApiMachineConfig
  lease_ttl?: number
  name?: string
  region?: string
  skip_launch?: boolean
  skip_service_registration?: boolean
}

export interface CreateVolumeRequest {
  compute?: ApiMachineGuest
  encrypted?: boolean
  fstype?: string
  machines_only?: boolean
  name?: string
  region?: string
  require_unique_zone?: boolean
  size_gb?: number
  /** restore from snapshot */
  snapshot_id?: string
  /** fork from remote volume */
  source_volume_id?: string
}

export interface ErrorResponse {
  error?: string
}

export interface ExtendVolumeRequest {
  size_gb?: number
}

export interface ExtendVolumeResponse {
  needs_restart?: boolean
  volume?: Volume
}

export interface ImageRef {
  digest?: string
  labels?: Record<string, string>
  registry?: string
  repository?: string
  tag?: string
}

export interface Lease {
  /** Description or reason for the Lease. */
  description?: string
  /** ExpiresAt is the unix timestamp in UTC to denote when the Lease will no longer be valid. */
  expires_at?: number
  /** Nonce is the unique ID autogenerated and associated with the Lease. */
  nonce?: string
  /** Owner is the user identifier which acquired the Lease. */
  owner?: string
}

export interface ListApp {
  machine_count?: number
  name?: string
  network?: any
}

export interface ListAppsResponse {
  apps?: ListApp[]
  total_apps?: number
}

export interface ListenSocket {
  address?: string
  proto?: string
}

export interface Machine {
  checks?: CheckStatus[]
  config?: ApiMachineConfig
  created_at?: string
  events?: MachineEvent[]
  id?: string
  image_ref?: ImageRef
  /** InstanceID is unique for each version of the machine */
  instance_id?: string
  name?: string
  /** Nonce is only every returned on machine creation if a lease_duration was provided. */
  nonce?: string
  /** PrivateIP is the internal 6PN address of the machine. */
  private_ip?: string
  region?: string
  state?: string
  updated_at?: string
}

export interface MachineEvent {
  id?: string
  request?: any
  source?: string
  status?: string
  timestamp?: number
  type?: string
}

export interface MachineExecRequest {
  /** Deprecated: use Command instead */
  cmd?: string
  command?: string[]
  timeout?: number
}

export interface MachineVersion {
  user_config?: ApiMachineConfig
  version?: string
}

export interface Organization {
  name?: string
  slug?: string
}

export interface ProcessStat {
  command?: string
  cpu?: number
  directory?: string
  listen_sockets?: ListenSocket[]
  pid?: number
  rss?: number
  rtime?: number
  stime?: number
}

export interface SignalRequest {
  signal?: SignalRequestSignalEnum
}

export interface StopRequest {
  signal?: string
  timeout?: string
}

export interface UpdateMachineRequest {
  config?: ApiMachineConfig
  current_version?: string
  lease_ttl?: number
  name?: string
  region?: string
  skip_launch?: boolean
  skip_service_registration?: boolean
}

export interface Volume {
  attached_alloc_id?: string
  attached_machine_id?: string
  block_size?: number
  blocks?: number
  blocks_avail?: number
  blocks_free?: number
  created_at?: string
  encrypted?: boolean
  fstype?: string
  id?: string
  name?: string
  region?: string
  size_gb?: number
  state?: string
  zone?: string
}

export interface VolumeSnapshot {
  created_at?: string
  digest?: string
  id?: string
  size?: number
}

export interface ApiDNSConfig {
  skip_registration?: boolean
}

export interface ApiFile {
  /**
   * GuestPath is the path on the machine where the file will be written and must be an absolute path.
   * i.e. /full/path/to/file.json
   */
  guest_path?: string
  /** RawValue containts the base64 encoded string of the file contents. */
  raw_value?: string
  /** SecretName is the name of the secret that contains the base64 encoded file contents. */
  secret_name?: string
}

export interface ApiHTTPOptions {
  compress?: boolean
  response?: ApiHTTPResponseOptions
}

export interface ApiHTTPResponseOptions {
  headers?: Record<string, any>
}

export interface ApiMachineCheck {
  grace_period?: string
  headers?: ApiMachineHTTPHeader[]
  interval?: string
  method?: string
  path?: string
  port?: number
  protocol?: string
  timeout?: string
  tls_server_name?: string
  tls_skip_verify?: boolean
  type?: string
}

export interface ApiMachineConfig {
  auto_destroy?: boolean
  checks?: Record<string, ApiMachineCheck>
  /** Deprecated: use Service.Autostart instead */
  disable_machine_autostart?: boolean
  dns?: ApiDNSConfig
  /**
   * Fields managed from fly.toml
   * If you add anything here, ensure appconfig.Config.ToMachine() is updated
   */
  env?: Record<string, string>
  files?: ApiFile[]
  guest?: ApiMachineGuest
  host_dedication_id?: string
  /** Set by fly deploy or fly machines commands */
  image?: string
  init?: ApiMachineInit
  metadata?: Record<string, string>
  metrics?: ApiMachineMetrics
  mounts?: ApiMachineMount[]
  processes?: ApiMachineProcess[]
  restart?: ApiMachineRestart
  /**
   * The following fields can only be set or updated by `fly machines run|update` commands
   * "fly deploy" must preserve them, if you add anything here, ensure it is propagated on deploys
   */
  schedule?: string
  services?: ApiMachineService[]
  /** Deprecated: use Guest instead */
  size?: string
  /**
   * Standbys enable a machine to be a standby for another. In the event of a hardware failure,
   * the standby machine will be started.
   */
  standbys?: string[]
  statics?: ApiStatic[]
  stop_config?: ApiStopConfig
}

export interface ApiMachineGuest {
  cpu_kind?: string
  cpus?: number
  gpus?: number
  kernel_args?: string[]
  memory_mb?: number
}

export interface ApiMachineHTTPHeader {
  name?: string
  values?: string[]
}

export interface ApiMachineInit {
  cmd?: string[]
  entrypoint?: string[]
  exec?: string[]
  kernel_args?: string[]
  swap_size_mb?: number
  tty?: boolean
}

export interface ApiMachineMetrics {
  path?: string
  port?: number
}

export interface ApiMachineMount {
  encrypted?: boolean
  name?: string
  path?: string
  size_gb?: number
  volume?: string
}

export interface ApiMachinePort {
  end_port?: number
  force_https?: boolean
  handlers?: string[]
  http_options?: ApiHTTPOptions
  port?: number
  proxy_proto_options?: ApiProxyProtoOptions
  start_port?: number
  tls_options?: ApiTLSOptions
}

export interface ApiMachineProcess {
  cmd?: string[]
  entrypoint?: string[]
  env?: Record<string, string>
  exec?: string[]
  user?: string
}

export interface ApiMachineRestart {
  /** MaxRetries is only relevant with the on-failure policy. */
  max_retries?: number
  policy?: string
}

export interface ApiMachineService {
  autostart?: boolean
  autostop?: boolean
  checks?: ApiMachineCheck[]
  concurrency?: ApiMachineServiceConcurrency
  force_instance_description?: string
  force_instance_key?: string
  internal_port?: number
  min_machines_running?: number
  ports?: ApiMachinePort[]
  protocol?: string
}

export interface ApiMachineServiceConcurrency {
  hard_limit?: number
  soft_limit?: number
  type?: string
}

export interface ApiProxyProtoOptions {
  version?: string
}

export interface ApiStatic {
  guest_path: string
  url_prefix: string
}

export interface ApiStopConfig {
  signal?: string
  timeout?: string
}

export interface ApiTLSOptions {
  alpn?: string[]
  default_self_signed?: boolean
  versions?: string[]
}

export enum SignalRequestSignalEnum {
  SIGABRT = 'SIGABRT',
  SIGALRM = 'SIGALRM',
  SIGFPE = 'SIGFPE',
  SIGHUP = 'SIGHUP',
  SIGILL = 'SIGILL',
  SIGINT = 'SIGINT',
  SIGKILL = 'SIGKILL',
  SIGPIPE = 'SIGPIPE',
  SIGQUIT = 'SIGQUIT',
  SIGSEGV = 'SIGSEGV',
  SIGTERM = 'SIGTERM',
  SIGTRAP = 'SIGTRAP',
  SIGUSR1 = 'SIGUSR1',
}

export interface AppsListParams {
  /** The org slug, or 'personal', to filter apps */
  org_slug?: string
}

export interface MachinesListParams {
  /** Include deleted machines */
  include_deleted?: boolean
  /** Region filter */
  region?: string
  /** Fly App Name */
  appName: string
}

export interface MachinesListProcessesParams {
  /** Sort by */
  sort_by?: string
  /** Order */
  order?: string
  /** Fly App Name */
  appName: string
  /** Machine ID */
  machineId: string
}

export interface MachinesRestartParams {
  /** Restart timeout as a Go duration string or number of seconds */
  timeout?: string
  /** Fly App Name */
  appName: string
  /** Machine ID */
  machineId: string
}

export interface MachinesWaitParams {
  /** instance? version? TODO */
  instance_id?: string
  /** wait timeout. default 60s */
  timeout?: number
  /** desired state */
  state?: StateEnum
  /** Fly App Name */
  appName: string
  /** Machine ID */
  machineId: string
}

/** desired state */
export enum StateEnum {
  Started = 'started',
  Stopped = 'stopped',
  Destroyed = 'destroyed',
}

/** desired state */
export enum MachinesWaitParams1StateEnum {
  Started = 'started',
  Stopped = 'stopped',
  Destroyed = 'destroyed',
}
